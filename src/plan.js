const tasks = [
  // Month 1: Programming Fundamentals
  "Install Python, set up an IDE (e.g., PyCharm, VSCode), learn syntax (variables, data types)",
  "Control structures (if, for, while loops), write simple programs",
  "Functions, modules, practice with small scripts",
  "Data structures (lists, tuples, dictionaries), manipulate data",
  "File I/O, exception handling, debug a program",
  "Intro to NumPy, create arrays, basic operations",
  "Array operations (slicing, broadcasting), perform matrix math",
  "Linear algebra with NumPy (dot products, inverses)",
  "Random number generation, simulate dice rolls",
  "Advanced indexing, optimize a small NumPy script",
  "Intro to pandas, create Series and DataFrames",
  "Data manipulation (filtering, grouping), clean a dataset",
  "Time series with pandas, handle dates",
  "Merge/join datasets, work with multiple tables",
  "Visualize data with pandas and matplotlib (e.g., plot stock prices)",
  "Probability basics (events, rules), calculate probabilities",
  "Conditional probability, Bayes’ theorem, code examples",
  "Random variables, expectation, simulate coin flips",
  "Variance, covariance, compute for a dataset",
  "Common distributions (normal, binomial), plot them",
  "Descriptive stats (mean, median), summarize data",
  "Visualize data (histograms, box plots) with matplotlib",
  "Sampling distributions, simulate samples",
  "Confidence intervals, calculate for a mean",
  "Hypothesis testing basics, perform a t-test",
  "Download a financial dataset (e.g., stock prices from Yahoo Finance)",
  "Clean and explore the data with pandas",
  "Calculate basic statistics (returns, volatility)",
  "Visualize trends and distributions",
  "Write a report summarizing findings",

  // Month 2: Mathematics Foundation
  "Review probability, code probability calculations",
  "Discrete distributions (binomial), simulate trials",
  "Continuous distributions (normal), plot PDFs",
  "Expectation/variance, compute for simulated data",
  "Covariance/correlation, analyze stock returns",
  "Law of large numbers, simulate convergence",
  "Central limit theorem, demonstrate with samples",
  "Joint distributions, work with multivariate normal",
  "Conditional distributions, apply Bayes’ theorem",
  "Moment generating functions, numerical examples",
  "Vectors, use NumPy arrays for operations",
  "Matrices, perform matrix math in NumPy",
  "Solve linear systems with np.linalg.solve",
  "Determinants/inverses, compute with NumPy",
  "Eigenvalues/eigenvectors, use np.linalg.eig",
  "Diagonalization, apply to a financial model",
  "Singular value decomposition, compress data",
  "PCA on stock returns, reduce dimensions",
  "Least squares regression with linear algebra",
  "Portfolio optimization using matrices",
  "Differentiation review, use SymPy for symbolic math",
  "Numerical differentiation, code finite differences",
  "Optimization, use scipy.optimize for minima",
  "Integration, numerical integration with scipy",
  "Partial derivatives, compute gradients",
  "Multivariable optimization, apply to finance",
  "Bond duration/convexity",
  "Continue bond duration/convexity from Day 57",
  "Review calculus concepts",
  "Apply calculus to a finance problem",

  // Month 3: Statistics and Data Analysis
  "Descriptive stats, summarize financial data",
  "Sampling distributions, use bootstrapping",
  "Confidence intervals, compute for returns",
  "Hypothesis testing, t-tests on data",
  "p-values/significance, interpret results",
  "ANOVA, analyze variance in returns",
  "Chi-square tests, test independence",
  "Non-parametric tests, apply to skewed data",
  "Bayesian basics, update probabilities",
  "Project: statistical analysis of a dataset",
  "Simple linear regression, code from scratch",
  "Multiple regression, use scikit-learn",
  "Model diagnostics, check residuals",
  "Polynomial regression, fit curves",
  "Logistic regression, classify outcomes",
  "Regularization (L1, L2), prevent overfitting",
  "Time series regression, AR models",
  "Predict stock prices with regression",
  "Cross-validation, evaluate models",
  "Project: regression on financial data",
  "Time series components (trend, seasonality)",
  "Stationarity, test with ADF",
  "ARIMA models, fit to data",
  "GARCH models, model volatility",
  "Forecasting, evaluate accuracy",
  "Cointegration, test relationships",
  "Vector autoregression (VAR), multi-series",
  "Predict economic indicators",
  "Trading strategy with time series",
  "Project: forecast a financial series",

  // Month 4: Finance Basics
  "Market types (equity, debt), read an overview",
  "Market participants, study roles",
  "Stocks and bonds, analyze examples",
  "Options, understand calls/puts",
  "Futures/forwards, study contracts",
  "Swaps, learn interest rate swaps",
  "Market data, download and explore",
  "Visualize instrument prices",
  "Calculate returns for instruments",
  "Project: summarize market data",
  "Mean-variance optimization, theory",
  "Efficient frontier, plot with Python",
  "CAPM, calculate beta",
  "Factor models, intro to Fama-French",
  "Diversification, simulate portfolios",
  "Sharpe ratio, compute metrics",
  "Optimize a portfolio with scipy",
  "Backtest a portfolio strategy",
  "Risk-adjusted returns, analyze",
  "Project: build a small portfolio",
  "Review markets, quiz yourself",
  "Review instruments, code examples",
  "Review portfolio theory, exercises",
  "Time series on portfolio returns",
  "Regression on portfolio factors",
  "Visualize portfolio performance",
  "Simulate portfolio rebalancing",
  "Study a real fund’s strategy",
  "Write a summary of learnings",
  "Mini project: optimize a 5-stock portfolio",

  // Month 5: Advanced Mathematics and Programming
  "Intro to stochastic processes, read basics",
  "Brownian motion, simulate in Python",
  "Properties of Brownian motion",
  "Ito’s lemma, derive simple cases",
  "Stochastic integrals, numerical examples",
  "SDEs, understand structure",
  "Solve SDEs with Euler-Maruyama",
  "Geometric Brownian motion, simulate",
  "Applications in finance (e.g., stock prices)",
  "Monte Carlo with stochastic processes",
  "Review stochastic concepts",
  "Code a stochastic model",
  "Analyze simulation results",
  "Read a paper on stochastic finance",
  "Project: simulate stock price paths",
  "Install C++, write “Hello World”",
  "Variables, data types, basic I/O",
  "Control structures, loops",
  "Functions, pass-by-reference",
  "Arrays, pointers basics",
  "Classes, object-oriented programming",
  "STL (vectors, maps), use in code",
  "Rewrite a Python script in C++",
  "Performance comparison Python vs. C++",
  "Monte Carlo simulation in C++",
  "Optimize C++ code (e.g., loops)",
  "Interface C++ with Python (e.g., pybind11)",
  "Debug a C++ program",
  "Read C++ for quant finance examples",
  "Project: price an option in C++",

  // Month 6: Derivatives and Risk Management
  "Options basics review, read terms",
  "Black-Scholes model, derive formula",
  "Implement Black-Scholes in Python",
  "Greeks (delta, gamma), compute",
  "Binomial trees, code a tree",
  "Price an American option",
  "Monte Carlo for option pricing",
  "Compare pricing methods",
  "Volatility smile, analyze data",
  "Exotic options, intro to types",
  "Price an exotic option in C++",
  "Read a derivatives pricing paper",
  "Simulate option payoffs",
  "Backtest an option strategy",
  "Project: price a portfolio of options",
  "Intro to risk, types of risk",
  "Value at Risk (VaR), calculate historical VaR",
  "Parametric VaR, implement",
  "Monte Carlo VaR, simulate",
  "Stress testing, design scenarios",
  "Backtest VaR models",
  "Credit risk basics, read overview",
  "Expected loss, calculate examples",
  "Risk metrics for a portfolio",
  "Implement risk model in Python",
  "Optimize portfolio for risk",
  "Review risk concepts",
  "Analyze a real risk report",
  "Code a risk dashboard",
  "Project: assess risk of a strategy",

  // Month 7: Machine Learning for Finance
  "Intro to ML, scikit-learn basics",
  "Linear regression review, ML context",
  "Decision trees, fit to data",
  "Random forests, predict returns",
  "SVMs, classify market trends",
  "K-means clustering, group stocks",
  "PCA, reduce dimensions again",
  "Feature engineering, create features",
  "Model evaluation, ROC curves",
  "Time series ML, lagged features",
  "Predict stock prices with ML",
  "Cluster financial instruments",
  "Hyperparameter tuning, grid search",
  "Read an ML finance paper",
  "Project: ML model for price prediction",
  "Neural networks intro, TensorFlow basics",
  "Build a simple NN for regression",
  "Apply NN to financial data",
  "Overfitting, regularization techniques",
  "Ensemble methods, combine models",
  "Backtest an ML trading strategy",
  "Review supervised learning",
  "Review unsupervised learning",
  "Optimize an ML model in C++",
  "Analyze ML model performance",
  "Study ML in risk management",
  "Code an ML risk predictor",
  "Visualize ML results",
  "Write a summary of ML learnings",
  "Project: ML-based trading signal",

  // Month 8: Quantitative Finance Applications
  "Intro to algo trading, read basics",
  "Moving average crossover, code it",
  "Mean reversion strategy, implement",
  "Momentum strategy, backtest",
  "Pairs trading, find cointegrated pairs",
  "Backtest pairs trading strategy",
  "Transaction costs, model impact",
  "Optimize a trading strategy",
  "High-frequency trading basics",
  "Simulate HFT in C++",
  "Risk in trading, assess strategies",
  "Read a trading strategy paper",
  "Build a multi-strategy system",
  "Analyze trading performance",
  "Project: backtest a complex strategy",
  "Bond basics, yield curves",
  "Bond pricing, code a calculator",
  "Duration, compute sensitivity",
  "Convexity, adjust pricing",
  "Yield curve models, Nelson-Siegel",
  "Implement yield curve fitting",
  "Interest rate derivatives, intro",
  "Price an interest rate swap",
  "Fixed income risk, calculate VaR",
  "Simulate bond portfolio",
  "Review fixed income concepts",
  "Analyze a bond market dataset",
  "Optimize a bond portfolio",
  "Write a fixed income summary",
  "Project: model a bond strategy",

  // Month 9: Advanced Programming and Data
  "Templates, write generic code",
  "STL deep dive (e.g., algorithms)",
  "Memory management, smart pointers",
  "Multithreading, parallelize code",
  "Optimize Monte Carlo in C++",
  "Build a pricing library in C++",
  "Profile and speed up code",
  "Rewrite a Python model in C++",
  "Unit testing in C++, ensure correctness",
  "Interface C++ with Python again",
  "Read C++ quant code examples",
  "Simulate a large dataset in C++",
  "Debug an advanced C++ program",
  "Compare C++ vs. Python performance",
  "Project: high-performance option pricer",
  "Install a database (e.g., SQLite), learn basics",
  "SQL syntax, SELECT queries",
  "Joins, combine tables",
  "Aggregations (GROUP BY), summarize data",
  "Subqueries, nested operations",
  "Indexes, optimize queries",
  "Store financial data in SQL",
  "Query financial time series",
  "Python-SQL integration (e.g., sqlite3)",
  "Design a financial database",
  "Import large datasets into SQL",
  "Analyze data with SQL queries",
  "Optimize SQL performance",
  "Backup and secure a database",
  "Project: query-based financial analysis",

  // Month 10: Specialization and Projects
  "Review Black-Scholes, deepen understanding",
  "Stochastic volatility models, Heston",
  "Implement Heston model in Python",
  "Calibrate model to market data",
  "Local volatility, intro and theory",
  "Code local volatility model",
  "Exotic options (e.g., barrier), price them",
  "American options, advanced methods",
  "Monte Carlo for exotics in C++",
  "Greeks for exotic options",
  "Read advanced options paper",
  "Simulate option portfolio",
  "Backtest an options strategy",
  "Optimize pricing algorithm",
  "Project: price and hedge an option",
  "Define project (e.g., trading algo)",
  "Gather data, plan approach",
  "Preprocess and explore data",
  "Build mathematical model",
  "Code core algorithm in Python",
  "Optimize with C++ components",
  "Backtest on historical data",
  "Evaluate performance metrics",
  "Refine model based on results",
  "Add risk management features",
  "Visualize results comprehensively",
  "Debug and stress-test project",
  "Write project documentation",
  "Present findings (mock presentation)",
  "Finalize capstone project",

  // Month 11: Review and Interview Prep
  "Review Python, code exercises",
  "Review probability, solve problems",
  "Review statistics, practice tests",
  "Review linear algebra, applications",
  "Review calculus, finance examples",
  "Review stochastic calculus, simulate",
  "Review finance basics, quiz",
  "Review derivatives, price options",
  "Review risk, compute VaR",
  "Review ML, rebuild a model",
  "Review trading strategies, backtest",
  "Review C++, optimize code",
  "Review SQL, query exercises",
  "Review capstone, refine it",
  "Full review day, mixed problems",
  "Study quant interview questions",
  "Solve probability brainteasers",
  "Practice coding problems (LeetCode)",
  "Mock technical interview (math)",
  "Mock coding interview (Python)",
  "Behavioral questions, prepare answers",
  "Finance questions, practice",
  "Stochastic process questions",
  "ML interview prep, explain models",
  "C++ interview questions",
  "Review resume, tailor for quant roles",
  "Practice explaining capstone",
  "Simulate full interview",
  "Refine weak areas from practice",
  "Final prep, rest and review",

  // Month 12: Networking and Job Search
  "Join LinkedIn, optimize profile",
  "Connect with quant professionals",
  "Join quant forums (e.g., Wilmott)",
  "Attend a finance meetup (virtual/in-person)",
  "Email a quant for advice",
  "Research quant firms (e.g., Jane Street)",
  "Study firm-specific requirements",
  "Post capstone on GitHub",
  "Share project on LinkedIn",
  "Follow up on connections",
  "Join a quant competition (e.g., Kaggle)",
  "Network at a conference if possible",
  "Discuss career with a mentor",
  "Build a personal website/portfolio",
  "Refine networking pitch",
  "Identify 10 quant job postings",
  "Tailor resume for first 5 jobs",
  "Write cover letters for first 5",
  "Apply to first 5 jobs",
  "Tailor resume for next 5 jobs",
  "Write cover letters for next 5",
  "Apply to next 5 jobs",
  "Follow up on applications",
  "Prepare for phone screens",
  "Practice more interview questions",
  "Update skills based on feedback",
  "Apply to 5 more jobs if needed",
  "Study a new quant topic (e.g., HFT)",
  "Review all applications",
  "Mock final interview",
  "Refine portfolio again",
  "Continue networking",
  "Assess progress, adjust plan",
  "Final job applications",
  "Celebrate, reflect, prepare for offers",
];

export default tasks;
